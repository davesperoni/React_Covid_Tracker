[{"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\index.js":"1","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\App.js":"2","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\index.js":"3","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\Chart\\Chart.jsx":"4","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\Cards\\Cards.jsx":"5","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\CountryPicker2\\CountryPicker2.jsx":"6","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\api\\index.js":"7"},{"size":147,"mtime":1607519345188,"results":"8","hashOfConfig":"9"},{"size":1059,"mtime":1607609432941,"results":"10","hashOfConfig":"9"},{"size":177,"mtime":1607520169364,"results":"11","hashOfConfig":"9"},{"size":2679,"mtime":1607608153692,"results":"12","hashOfConfig":"9"},{"size":3070,"mtime":1607523883605,"results":"13","hashOfConfig":"9"},{"size":931,"mtime":1607544523307,"results":"14","hashOfConfig":"9"},{"size":1008,"mtime":1607544613341,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"u7hbpa",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\index.js",[],["33","34"],"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\App.js",[],"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\index.js",[],"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\Chart\\Chart.jsx",["35"],"import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ( {data: { confirmed, deaths, recovered }, country} ) => {\n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n             setDailyData(await fetchDailyData());\n        }\n\n        console.log(dailyData);\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ? ( \n            <Line \n                data={{\n                    labels: dailyData.map(( { date }) => new Date(date).toLocaleDateString()),\n                    datasets: [{\n                        data: dailyData.map((data) => data.confirmed),\n                        label: \"Infected\",\n                        borderColor: 'yellow',\n                        fill: true\n                    }, {\n                        data: dailyData.map((data) => data.deaths),\n                        label: \"Deaths\",\n                        borderColor: 'yellow',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true\n                    },\n                    {\n                        data: dailyData.map((data) => data.recovered),\n                        label: \"Recovered\",\n                        borderColor: 'yellow',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true\n                    },\n                \n                ],\n                }}\n            /> ) : null\n    );\n\n    console.log(confirmed, recovered, deaths);\n\n    const barChart = (\n        confirmed ? (\n                <Bar \n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0, 0, 255, 0.5)',\n                                'rgba(102, 255, 0, 0.5)',\n                                'rgba(207, 4, 21, 0.5)'\n                            ],\n                            data:[confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: { display: true, text:`Current state in ${country}`},\n                    }}\n                />\n            ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;\n","C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\Cards\\Cards.jsx",[],"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\components\\CountryPicker2\\CountryPicker2.jsx",[],["36","37"],"C:\\aa_Projects\\benchboi\\rona-tracker1\\src\\api\\index.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":19,"column":8,"nodeType":"44","endLine":19,"endColumn":10,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dailyData'. Either include it or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [dailyData]",{"range":"53","text":"54"},[494,496],"[dailyData]"]